{
	"info": {
		"_postman_id": "2fceb9a1-a68f-4ce3-bd8e-d9db53c7e458",
		"name": "LamaDev Ecommerce",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "6107327"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "Register",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const username = pm.variables.replaceIn(\"{{$randomUserName}}\")",
									"const password = pm.variables.replaceIn(\"{{$randomPassword}}\")",
									"const email = pm.variables.replaceIn(\"{{$randomEmail}}\")",
									"",
									"pm.environment.set(\"mockUsername\", username)",
									"pm.environment.set(\"mockPassword\", password)",
									"pm.environment.set(\"mockEmail\", email)"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"console.log(pm.response.body)",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"{{mockUsername}}\",\n    \"password\": \"{{mockPassword}}\",\n    \"email\": \"{{mockEmail}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/auth/register",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register Admin",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const username = pm.variables.replaceIn(\"{{$randomUserName}}\")",
									"const password = pm.variables.replaceIn(\"{{$randomPassword}}\")",
									"const email = pm.variables.replaceIn(\"{{$randomEmail}}\")",
									"",
									"pm.environment.set(\"mockUsername\", username)",
									"pm.environment.set(\"mockPassword\", password)",
									"pm.environment.set(\"mockEmail\", email)"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"console.log(pm.response.body)",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"{{mockUsername}}\",\n    \"password\": \"{{mockPassword}}\",\n    \"email\": \"{{mockEmail}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/users/createAdmin",
							"host": [
								"{{url}}"
							],
							"path": [
								"users",
								"createAdmin"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"if(pm.response.json().others.isAdmin){",
									"pm.environment.set(\"adminToken\", pm.response.json().accessToken)",
									"pm.environment.set(\"adminId\", pm.response.json().others._id)",
									"",
									"} else{",
									"pm.environment.set(\"token\", pm.response.json().accessToken)",
									"pm.environment.set(\"userId\", pm.response.json().others._id)",
									"",
									"}",
									"console.log(pm.response.json().others.isAdmin)"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"followOriginalHttpMethod": false
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"{{mockUsername}}\",\n    \"password\": \"{{mockPassword}}\",\n    \"email\": \"{{mockEmail}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/auth/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login with Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"if(pm.response.json().others.isAdmin){",
									"pm.environment.set(\"adminToken\", pm.response.json().accessToken)",
									"pm.environment.set(\"adminId\", pm.response.json().others._id)",
									"} else{",
									"pm.environment.set(\"token\", pm.response.json().accessToken)",
									"pm.environment.set(\"userId\", pm.response.json().others._id)",
									"}",
									"console.log(pm.response.json().others.isAdmin)"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"followOriginalHttpMethod": false
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"admin\",\n    \"password\": \"1234\",\n    \"email\": \"admin@test.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/auth/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "GET/ users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "token",
								"value": "Bearer {{adminToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/users/",
							"host": [
								"{{url}}"
							],
							"path": [
								"users",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "GET/ users stats",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"value": "Bearer {{adminToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/users/stats",
							"host": [
								"{{url}}"
							],
							"path": [
								"users",
								"stats"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET/ user by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"value": "Bearer {{adminToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/users/{{adminId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"users",
								"{{adminId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT/ user by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "token",
								"value": "Bearer {{adminToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"isAdmin\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/users/{{adminId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"users",
								"{{adminId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE/ user by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "token",
								"value": "Bearer {{adminToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/users/{{adminId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"users",
								"{{adminId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Products",
			"item": [
				{
					"name": "Get Products",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/products",
							"host": [
								"{{url}}"
							],
							"path": [
								"products"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}